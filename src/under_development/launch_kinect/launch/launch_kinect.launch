<launch>
    <!--

        ARGUMENTS

    -->

      <!-- "camera" should uniquely identify the device. All topics are pushed down
       into the "camera" namespace, and it is prepended to tf frame ids. -->
    <arg name="camera" default="camera" />
    <arg name="rgb_frame_id"   default="$(arg camera)_rgb_optical_frame" />
    <arg name="depth_frame_id" default="$(arg camera)_depth_optical_frame" />

      <!-- device_id can have the following formats:
         "B00367707227042B": Use device with given serial number
         "#1"              : Use first device found
         "2@3"             : Use device on USB bus 2, address 3
         "2@0"             : Use first device found on USB bus 2
        -->
    <arg name="device_id" default="#1" />

    <!-- By default, calibrations are stored to file://${ROS_HOME}/camera_info/${NAME}.yaml,
        where ${NAME} is of the form "[rgb|depth]_[serial#]", e.g. "depth_B00367707227042B".
        See camera_info_manager docs for calibration URL details. -->
    <arg name="rgb_camera_info_url"   default="" />
    <arg name="depth_camera_info_url" default="" />

    <!-- Use OpenNI's factory-calibrated depth->RGB registration? -->
    <arg name="depth_registration" default="true" />

    <!-- Worker threads for the nodelet manager -->
    <arg name="num_worker_threads" default="4" />

    <!-- Arguments for remapping the namespaces -->
    <arg name="rgb"                       default="rgb" />
    <arg name="ir"                        default="ir" />
    <arg name="depth"                     default="depth" />
    <arg name="depth_registered"          default="depth_registered" />
    <arg name="depth_registered_filtered" default="depth_registered" />
    <arg name="projector"                 default="projector" />

    <!-- Processing modules -->
    <arg name="rgb_processing"                  default="true"/>
    <arg name="ir_processing"                   default="true"/>
    <arg name="depth_processing"                default="true"/>
    <arg name="depth_registered_processing"     default="true"/>

    <!-- Make node respawn if it dies. Don't use. -->
    <arg name="respawn" default="false" />


    <!--

        START NODES

    -->

    <!-- Launch TF tree for kinect -->
    <include file="$(find rgbd_launch)/launch/kinect_frames.launch">
        <arg name="camera" value="$(arg camera)" />
    </include>

    <!-- Push down all topics/nodelets into "camera" namespace -->
    <group ns="$(arg camera)">
    
        <!-- Start nodelet manager in top-level namespace -->
        <arg name="manager" value="$(arg camera)_nodelet_manager" />
        <arg name="debug" default="false" /> <!-- Run manager in GDB? -->
        <include file="$(find rgbd_launch)/launch/includes/manager.launch.xml">
        <arg name="name"                value="$(arg manager)" />
        <arg name="debug"               value="$(arg debug)" />
        <arg name="num_worker_threads"  value="$(arg num_worker_threads)" />
        </include>

        <!-- Load driver -->
        <include file="$(find openni_launch)/launch/includes/device.launch.xml">
        <!-- Could really use some syntactic sugar for this -->
        <arg name="manager"               value="$(arg manager)" />
        <arg name="device_id"             value="$(arg device_id)" />
        <arg name="rgb_frame_id"          value="$(arg rgb_frame_id)" />
        <arg name="depth_frame_id"        value="$(arg depth_frame_id)" />
        <arg name="rgb_camera_info_url"   value="$(arg rgb_camera_info_url)" />
        <arg name="depth_camera_info_url" value="$(arg depth_camera_info_url)" />
        <arg name="depth_registration"    value="$(arg depth_registration)" />
        <arg name="rgb"                   value="$(arg rgb)" />
        <arg name="ir"                    value="$(arg ir)" />
        <arg name="depth"                 value="$(arg depth)" />
        <arg name="depth_registered"      value="$(arg depth_registered)" />
        <arg name="projector"             value="$(arg projector)" />
        <arg name="respawn"               value="$(arg respawn)" />
        </include>
        
        <!-- Load standard constellation of processing nodelets -->
        <include file="$(find rgbd_launch)/launch/includes/processing.launch.xml">
        <arg name="manager"                         value="$(arg manager)" />
        <arg name="rgb"                             value="$(arg rgb)" />
        <arg name="ir"                              value="$(arg ir)" />
        <arg name="depth"                           value="$(arg depth)" />
        <arg name="depth_registered"                value="$(arg depth_registered)" />
        <arg name="depth_registered_filtered"       value="$(arg depth_registered_filtered)" />
        <arg name="respawn"                         value="$(arg respawn)" />
        <arg name="rgb_processing"                  value="$(arg rgb_processing)" />
        <arg name="ir_processing"                   value="$(arg ir_processing)" />
        <arg name="depth_processing"                value="$(arg depth_processing)" />
        <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)" />
      </include>
    
    </group> <!-- camera -->


</launch>